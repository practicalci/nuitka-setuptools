cmake_minimum_required(VERSION 3.0)

FIND_PACKAGE(SWIG REQUIRED)
INCLUDE(${SWIG_USE_FILE})

SET(GLOBAL_SWIG_LINK_FLAGS "") #??
# SET(GLOBAL_SWIG_LINK_FLAGS "-undefined suppress -flat_namespace") this is causing errors ??

FIND_PACKAGE(PythonInterp 3.6 REQUIRED)
FIND_PACKAGE(PythonLibs 3.6 REQUIRED)

INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})

MACRO(MYSWIG_ADD_MODULE name)
  # As it is a macro, even invoked from a subfolder, variables such as cmake_current_source_dir would be well defined
  SET(CMAKE_SWIG_OUTDIR "${CMAKE_CURRENT_SOURCE_DIR}")
  SET_SOURCE_FILES_PROPERTIES(${name}.i PROPERTIES CPLUSPLUS ON)
  SWIG_ADD_MODULE(${name} python ${name}.i ${name}.cpp ${name}.h)
  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
  SET_TARGET_PROPERTIES(${SWIG_MODULE_${name}_REAL_NAME} PROPERTIES LINK_FLAGS "${GLOBAL_SWIG_LINK_FLAGS}" LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}" LIBRARY_OUTPUT_DIRECTORY_DEBUG "${CMAKE_CURRENT_SOURCE_DIR}" LIBRARY_OUTPUT_DIRECTORY_RELEASE "${CMAKE_CURRENT_SOURCE_DIR}")
  
  SWIG_LINK_LIBRARIES(${name} ${PYTHON_LIBRARIES}) 
ENDMACRO(MYSWIG_ADD_MODULE)

MYSWIG_ADD_MODULE(myswig_module)
